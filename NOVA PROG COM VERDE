int S_FE = 47 ; // Sensor frontal esquerda
int S_FC = 41 ; // Sensor frontal centro
int S_FD = 34 ; // Sensor frontal direita
int S_TE = 44 ; // Sensor traseiro  esquerda / 1 = branco / 0 = preto
int S_TEE = 50 ; //Sensor traseiro extremo esquerda / 1 = branco / 0 = preto 
int S_TC = 35 ; // Sensor traseiro centro / 1 = branco / 0 = preto
int S_TD = 40 ; // Sensor traseiro direita / 1 branco / 0 preto
int S_TED = 53 ; //Sensor traseiro extrema direita / 1 = branco / 0 = preto 
int S_VEE = A11 ; //Sensor verde extrema esquerda
int S_VE = A13 ; // Sensor verde esquerda
int S_VED = A9; //Sensor verde extrema direita
int S_VD = A15 ; // Sensor verde direita
byte mfd = 11 ; // Motor frontal direita
byte mtd = 10; // Motor traseiro direita
byte mte = 5; // Motor traseiro esquerda 
byte mfe = 4 ; // Motor frontal esquerda 

byte led1 = 22 ;// led esquerdo
byte led2 = 24 ;// led vermelho
byte led3 = 26 ;// led verde 
byte led4 = 28 ;// led azul
byte led5 = 30 ; //led direito

float SO_VE;
float SO_VD;


  
void frente() //Função de ir à frente
{
  analogWrite(mfd, 170);
  analogWrite(mtd, 0);
  analogWrite(mfe, 170);
  analogWrite(mte, 0);
}

void direita() //Função de ajuste à direita
{
  analogWrite(mfd, 0);
  analogWrite(mtd, 170);
  analogWrite(mfe, 170);
  analogWrite(mte, 0);
}

void esquerda() //Função de ajuste à esquerda
{
  analogWrite(mfd, 170);
  analogWrite(mtd, 0);
  analogWrite(mfe, 0);
  analogWrite(mte, 170);
}
void parar() //Função de parar o robô
{
  analogWrite(mfd, 0);
  analogWrite(mtd, 0);
  analogWrite(mfe, 0);
  analogWrite(mte, 0);
}

void atualiza() //Função de atualização dos sensores
{

S_FE = digitalRead(47);
S_FC = digitalRead(41);
S_FD = digitalRead(34);
S_TE = digitalRead(44);
S_TEE = digitalRead(50);
S_TC = digitalRead(35);
S_TD = digitalRead(40);
S_TED = digitalRead(53);
S_VEE = analogRead(A11);
S_VE = analogRead(A13);
S_VED = analogRead(A15);
S_VD = analogRead(A9);
}


void setup() {

pinMode(mfd, OUTPUT);
pinMode(mtd, OUTPUT);
pinMode(mfe, OUTPUT);
pinMode(mte, OUTPUT);
pinMode(led1,OUTPUT);
pinMode(led2,OUTPUT);
pinMode(led3,OUTPUT);
pinMode(led4,OUTPUT);
pinMode(led5,OUTPUT);
pinMode(S_FE, INPUT_PULLUP);
pinMode(S_FC, INPUT_PULLUP);
pinMode(S_FD, INPUT_PULLUP);
pinMode(S_TE, INPUT_PULLUP);
pinMode(S_TEE, INPUT_PULLUP);
pinMode(S_TC, INPUT_PULLUP);
pinMode(S_TD, INPUT_PULLUP);
pinMode(S_TED, INPUT_PULLUP);
pinMode(S_VED, INPUT_PULLUP);
pinMode(S_VE, INPUT_PULLUP);
pinMode(S_VED, INPUT_PULLUP);
pinMode(S_VD, INPUT_PULLUP);



Serial.begin(9600);
}

void loop() {

//leds
//digitalWrite(led1, HIGH);
//delay(1000);
//digitalWrite(led2, HIGH);
//delay(1000);
//digitalWrite(led3, HIGH);
//delay(1000);
//digitalWrite(led4, HIGH);
//delay(1000);
//digitalWrite(led5, HIGH);
//delay(1000);

S_FE = digitalRead(47);
S_FC = digitalRead(41);
S_FD = digitalRead(34);
S_TE = digitalRead(44);
S_TEE = digitalRead(50);
S_TC = digitalRead(35);
S_TD = digitalRead(40);
S_TED = digitalRead(53);
S_VEE = analogRead(A11);
S_VE = analogRead(A13);
S_VED = analogRead(A15);
S_VD = analogRead(A9);



//90 direita
  if ((S_TED == 1) && (S_TC == 1) && (S_FC == 0) && (S_FE == 0) && (S_FD == 0) && (S_TEE == 0))

  {
  Serial.println("90 direita");
  analogWrite(mfd, 0);
  analogWrite(mtd, 0);
  analogWrite(mfe, 0);
  analogWrite(mte, 0);
    delay(500);
    
  analogWrite(mfd, 170);
  analogWrite(mtd, 0);
  analogWrite(mfe, 170);
  analogWrite(mte, 0); 
    delay(350);

    atualiza();
     Serial.println(S_TC);
     Serial.println(S_TE);
    while (S_TC == 0) 
    {
 Serial.println(S_TC);
       Serial.println(S_TE);
    atualiza();
    Serial.println("curva 90 direita");

  analogWrite(mfd, 0);
  analogWrite(mtd, 190);
  analogWrite(mfe, 205);
  analogWrite(mte, 0);

  
   }
  analogWrite(mfd, 0);
  analogWrite(mtd, 170);
  analogWrite(mfe, 0);
  analogWrite(mte, 170);
  delay(150);
   return;
   
  }
  
//90 esquerda
  if ((S_TEE == 1) && (S_TC == 1) && (S_FC == 0) && (S_FE == 0) && (S_FD == 0) && (S_TED == 0))

  {
Serial.println("90 esquerda");
  analogWrite(mfd, 0);
  analogWrite(mtd, 0);
  analogWrite(mfe, 0);
  analogWrite(mte, 0);
    delay(500);
    
    atualiza();
    
     if ((S_FE == 1) || (S_FC == 1) || (S_FD == 1))

    {
  Serial.println("T esquerda");
//    analogWrite(mfd, 0);
//    analogWrite(mtd, 0);
//    analogWrite(mfe, 0);
//    analogWrite(mte, 0); 
//    delay(3000000000000000000);

    
    atualiza();
    SO_VE = (S_VEE + S_VE) / 2;
    if ((SO_VE <= 700) && (SO_VE >= 250))
    {
//    analogWrite(mfd, 0);
//    analogWrite(mtd, 0);
//    analogWrite(mfe, 0);
//    analogWrite(mte, 0); 
//    delay(30000000000000000000000);
    Serial.println("Verde esquerda");
    analogWrite(mfd, 170);
    analogWrite(mtd, 0);
    analogWrite(mfe, 170);
    analogWrite(mte, 0); 
    delay(300); 
      atualiza();
     Serial.println(S_TC);
     Serial.println(S_TD);
    while (S_TC == 0) 
    {
      Serial.println("curva do verde esquerda");
      Serial.println(S_TC);
       Serial.println(S_TD);
    atualiza();

  analogWrite(mfd, 170);
  analogWrite(mtd, 0);
  analogWrite(mfe, 0);
  analogWrite(mte, 170);
   }
  analogWrite(mfd, 0);
  analogWrite(mtd, 170);
  analogWrite(mfe, 0);
  analogWrite(mte, 170);
  delay(150);
   return;
    }

  analogWrite(mfd, 170);
  analogWrite(mtd, 0);
  analogWrite(mfe, 170);
  analogWrite(mte, 0); 
  delay(300);

    }
  
  analogWrite(mfd, 170);
  analogWrite(mtd, 0);
  analogWrite(mfe, 170);
  analogWrite(mte, 0); 
    delay(350);

    atualiza();
     Serial.println(S_TC);
     Serial.println(S_TD);
    while (S_TC == 0) 
    {
 Serial.println(S_TC);
       Serial.println(S_TD);
    atualiza();
    Serial.println("curva 90 esquerda");

  analogWrite(mfd, 170);
  analogWrite(mtd, 0);
  analogWrite(mfe, 0);
  analogWrite(mte, 170);

  
   }
  analogWrite(mfd, 0);
  analogWrite(mtd, 170);
  analogWrite(mfe, 0);
  analogWrite(mte, 170);
  delay(150);
   return;
   
  }
  

 //encruzilhada
  if ((S_TED == 1) && (S_TEE == 1))
  {
      Serial.println("encruzilhada");
//  analogWrite(mfd, 0);
//  analogWrite(mtd, 0);
//  analogWrite(mfe, 0);
//  analogWrite(mte, 0);
//    delay(50000000000000000000000);



 //verde direita
    atualiza();
    SO_VD = (S_VED + S_VD) / 2;
    if ((SO_VE <= 700) && (SO_VE >= 250))
    {
//    analogWrite(mfd, 0);
//    analogWrite(mtd, 0);
//    analogWrite(mfe, 0);
//    analogWrite(mte, 0); 
//    delay(3000000000000000000000000);
    Serial.println("verde_direita");
    analogWrite(mfd, 170);
    analogWrite(mtd, 0);
    analogWrite(mfe, 170);
    analogWrite(mte, 0); 
    delay(300); 
    atualiza();
     Serial.println(S_TC);
       Serial.println(S_TE);
    while (S_TC == 0) 
    {
       Serial.println(S_TC);
       Serial.println(S_TE);
       atualiza();
       Serial.println("curva verde direita");

      analogWrite(mfd, 0);
      analogWrite(mtd, 170);
      analogWrite(mfe, 170);
      analogWrite(mte, 0);
   }
  analogWrite(mfd, 0);
  analogWrite(mtd, 170);
  analogWrite(mfe, 0);
  analogWrite(mte, 170);
  delay(150);
    return;
  } 
  
    //verde esquerda
    
    atualiza();
    SO_VE = (S_VEE + S_VE) / 2;
    if ((SO_VE <= 700) && (SO_VE >= 250))
    {
//    analogWrite(mfd, 170);
//    analogWrite(mtd, 0);
//    analogWrite(mfe, 170);
//    analogWrite(mte, 0); 
//    delay(300000000000000000);
    Serial.println("Verde esquerdaE");
    analogWrite(mfd, 170);
    analogWrite(mtd, 0);
    analogWrite(mfe, 170);
    analogWrite(mte, 0); 
    delay(300); 
      atualiza();
     Serial.println(S_TC);
     Serial.println(S_TD);
    while (S_TC == 0) 
    {
      Serial.println("curva do verde esquerdaE");
      Serial.println(S_TC);
       Serial.println(S_TD);
    atualiza();

  analogWrite(mfd, 170);
  analogWrite(mtd, 0);
  analogWrite(mfe, 0);
  analogWrite(mte, 170);
   }
  analogWrite(mfd, 0);
  analogWrite(mtd, 170);
  analogWrite(mfe, 0);
  analogWrite(mte, 170);
  delay(150);
   return;
    }

  analogWrite(mfd, 170);
  analogWrite(mtd, 0);
  analogWrite(mfe, 170);
  analogWrite(mte, 0); 
  delay(350);
  
  }



//Segue linha
 if ((S_TE == 0) && (S_TD == 0))
  {
    
  Serial.println("tudobranco");
  analogWrite(mfd, 155);
  analogWrite(mtd, 0);
  analogWrite(mfe, 185);
  analogWrite(mte, 0);
  atualiza();
  return;
  }
  if ((S_TE == 0) && (S_TD == 1))
  {

  Serial.println("ajuste direita");
  analogWrite(mfd, 0);
  analogWrite(mtd, 180);
  analogWrite(mfe, 180);
  analogWrite(mte, 0);
  atualiza();
  return;

  }

  if ((S_TE == 1) && (S_TD == 0))
  {
  Serial.println("ajuste esquerda");
  analogWrite(mfd, 170);
  analogWrite(mtd, 0);
  analogWrite(mfe, 0);
  analogWrite(mte, 170);
  atualiza();
  return;
  }

















if ((S_TED == 1) && (S_TC == 1)&& (S_TEE == 0) && (S_FE == 1) || (S_FC == 1) || (S_FD == 1))

    {
  Serial.println("T direita");
    analogWrite(mfd, 0);
    analogWrite(mtd, 0);
    analogWrite(mfe, 0);
    analogWrite(mte, 0); 
    delay(30000000000000000000);

    
    atualiza();
    SO_VD = (S_VED + S_VD) / 2;
    if ((SO_VD <= 700) && (SO_VD >= 250))
    {
//    analogWrite(mfd, 0);
//    analogWrite(mtd, 0);
//    analogWrite(mfe, 0);
//    analogWrite(mte, 0); 
//    delay(3000000000000000000000000000000000);
    Serial.println("Verde direita");
    analogWrite(mfd, 170);
    analogWrite(mtd, 0);
    analogWrite(mfe, 170);
    analogWrite(mte, 0); 
    delay(300); 
      atualiza();
     Serial.println(S_TC);
     Serial.println(S_TE);
    while (S_TC == 0) 
    {
      Serial.println("curva do verde direita");
      Serial.println(S_TC);
       Serial.println(S_TE);
    atualiza();

  analogWrite(mfd, 0);
  analogWrite(mtd, 170);
  analogWrite(mfe, 170);
  analogWrite(mte, 0);
   }
  analogWrite(mfd, 0);
  analogWrite(mtd, 170);
  analogWrite(mfe, 0);
  analogWrite(mte, 170);
  delay(150);
   return;
    }

  analogWrite(mfd, 170);
  analogWrite(mtd, 0);
  analogWrite(mfe, 170);
  analogWrite(mte, 0); 
  delay(300);

    }
  

 
 }
